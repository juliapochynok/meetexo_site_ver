{"version":3,"sources":["webpack:///./src/players/Wistia.js"],"names":["Wistia","callPlayer","props","config","playerId","randomString","onPlay","onPause","onSeek","onEnded","this","onMount","url","playing","muted","controls","onReady","onError","getSDK","then","window","_wq","push","id","playerID","options","autoPlay","silentAutoPlay","controlsVisibleOnLoad","fullscreenButton","playbar","playbackRateControl","qualityControl","volumeControl","settingsControl","smallPlayButton","player","unbind","bind","seconds","fraction","rate","videoID","match","MATCH_URL_WISTIA","className","key","style","width","height","Component","canPlay","wistia"],"mappings":"4oEAKA,IAIqBA,E,uaAINC,K,kBACF,EAAKC,MAAMC,OAAOC,UAAlB,UAPY,kBAOZ,OAAoDC,gB,iBA+CtD,wBAAa,IAAKH,OAAMI,OAAX,sB,kBACZ,wBAAa,IAAKJ,OAAMK,QAAX,sB,iBACd,wBAAa,IAAKL,OAAMM,OAAX,sB,kBACZ,wBAAa,IAAKN,OAAMO,QAAX,sB,eAuBhB,WACL,EAAKR,WAAW,W,iBAGT,WACP,EAAKA,WAAW,a,2DA3EhBS,KAAKR,MAAMS,SAAWD,KAAKR,MAAMS,QAAQD,Q,2BAGrCE,GAAK,aACsDF,KAAKR,MAA5DW,EADC,EACDA,QAASC,EADR,EACQA,MAAOC,EADf,EACeA,SAAUC,EADzB,EACyBA,QAASb,EADlC,EACkCA,OAAQc,EAD1C,EAC0CA,QACnDC,YAjBY,kDACG,UAgBaC,MAAK,WAC/BC,OAAOC,IAAMD,OAAOC,KAAO,GAC3BD,OAAOC,IAAIC,KAAK,CACdC,GAAI,EAAKC,SACTC,QAAS,EAAF,CACLC,SAAUb,EACVc,eAAgB,QAChBb,MAAOA,EACPc,sBAAuBb,EACvBc,iBAAkBd,EAClBe,QAASf,EACTgB,oBAAqBhB,EACrBiB,eAAgBjB,EAChBkB,cAAelB,EACfmB,gBAAiBnB,EACjBoB,gBAAiBpB,GACdZ,EAAOsB,SAEZT,QAAS,SAAAoB,GACP,EAAKA,OAASA,EACd,EAAKC,SACL,EAAKD,OAAOE,KAAK,OAAQ,EAAKhC,QAC9B,EAAK8B,OAAOE,KAAK,QAAS,EAAK/B,SAC/B,EAAK6B,OAAOE,KAAK,OAAQ,EAAK9B,QAC9B,EAAK4B,OAAOE,KAAK,MAAO,EAAK7B,SAC7BO,SAGHC,K,+BAIHP,KAAK0B,OAAOC,OAAO,OAAQ3B,KAAKJ,QAChCI,KAAK0B,OAAOC,OAAO,QAAS3B,KAAKH,SACjCG,KAAK0B,OAAOC,OAAO,OAAQ3B,KAAKF,QAChCE,KAAK0B,OAAOC,OAAO,MAAO3B,KAAKD,W,6BAU/BC,KAAKT,WAAW,U,8BAIhBS,KAAKT,WAAW,W,6BAIhBS,KAAK2B,SACL3B,KAAKT,WAAW,Y,6BAGVsC,GACN7B,KAAKT,WAAW,OAAQsC,K,gCAGfC,GACT9B,KAAKT,WAAW,SAAUuC,K,sCAWXC,GACf/B,KAAKT,WAAW,eAAgBwC,K,oCAIhC,OAAO/B,KAAKT,WAAW,c,uCAIvB,OAAOS,KAAKT,WAAW,U,yCAIvB,OAAO,O,+BAGC,IACAW,EAAQF,KAAKR,MAAbU,IACF8B,EAAU9B,GAAOA,EAAI+B,MAAMC,KAAkB,GAC7CC,EAAY,6BAAH,OAAgCH,GAK/C,OACE,yBAAKnB,GAAIb,KAAKc,SAAUsB,IAAKJ,EAASG,UAAWA,EAAWE,MALhD,CACZC,MAAO,OACPC,OAAQ,e,8BA5GsBC,a,EAAflD,E,cACE,U,EADFA,E,UAEFmD,IAAQC,Q,EAFNpD,E,eAGE","file":"11.app.js","sourcesContent":["import React, { Component } from 'react'\n\nimport { callPlayer, getSDK, randomString } from '../utils'\nimport { canPlay, MATCH_URL_WISTIA } from '../patterns'\n\nconst SDK_URL = 'https://fast.wistia.com/assets/external/E-v1.js'\nconst SDK_GLOBAL = 'Wistia'\nconst PLAYER_ID_PREFIX = 'wistia-player-'\n\nexport default class Wistia extends Component {\n  static displayName = 'Wistia'\n  static canPlay = canPlay.wistia\n  static loopOnEnded = true\n  callPlayer = callPlayer\n  playerID = this.props.config.playerId || `${PLAYER_ID_PREFIX}${randomString()}`\n\n  componentDidMount () {\n    this.props.onMount && this.props.onMount(this)\n  }\n\n  load (url) {\n    const { playing, muted, controls, onReady, config, onError } = this.props\n    getSDK(SDK_URL, SDK_GLOBAL).then(() => {\n      window._wq = window._wq || []\n      window._wq.push({\n        id: this.playerID,\n        options: {\n          autoPlay: playing,\n          silentAutoPlay: 'allow',\n          muted: muted,\n          controlsVisibleOnLoad: controls,\n          fullscreenButton: controls,\n          playbar: controls,\n          playbackRateControl: controls,\n          qualityControl: controls,\n          volumeControl: controls,\n          settingsControl: controls,\n          smallPlayButton: controls,\n          ...config.options\n        },\n        onReady: player => {\n          this.player = player\n          this.unbind()\n          this.player.bind('play', this.onPlay)\n          this.player.bind('pause', this.onPause)\n          this.player.bind('seek', this.onSeek)\n          this.player.bind('end', this.onEnded)\n          onReady()\n        }\n      })\n    }, onError)\n  }\n\n  unbind () {\n    this.player.unbind('play', this.onPlay)\n    this.player.unbind('pause', this.onPause)\n    this.player.unbind('seek', this.onSeek)\n    this.player.unbind('end', this.onEnded)\n  }\n\n  // Proxy methods to prevent listener leaks\n  onPlay = (...args) => this.props.onPlay(...args)\n  onPause = (...args) => this.props.onPause(...args)\n  onSeek = (...args) => this.props.onSeek(...args)\n  onEnded = (...args) => this.props.onEnded(...args)\n\n  play () {\n    this.callPlayer('play')\n  }\n\n  pause () {\n    this.callPlayer('pause')\n  }\n\n  stop () {\n    this.unbind()\n    this.callPlayer('remove')\n  }\n\n  seekTo (seconds) {\n    this.callPlayer('time', seconds)\n  }\n\n  setVolume (fraction) {\n    this.callPlayer('volume', fraction)\n  }\n\n  mute = () => {\n    this.callPlayer('mute')\n  }\n\n  unmute = () => {\n    this.callPlayer('unmute')\n  }\n\n  setPlaybackRate (rate) {\n    this.callPlayer('playbackRate', rate)\n  }\n\n  getDuration () {\n    return this.callPlayer('duration')\n  }\n\n  getCurrentTime () {\n    return this.callPlayer('time')\n  }\n\n  getSecondsLoaded () {\n    return null\n  }\n\n  render () {\n    const { url } = this.props\n    const videoID = url && url.match(MATCH_URL_WISTIA)[1]\n    const className = `wistia_embed wistia_async_${videoID}`\n    const style = {\n      width: '100%',\n      height: '100%'\n    }\n    return (\n      <div id={this.playerID} key={videoID} className={className} style={style} />\n    )\n  }\n}\n"],"sourceRoot":""}